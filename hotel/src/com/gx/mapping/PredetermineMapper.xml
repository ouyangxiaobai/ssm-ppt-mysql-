<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gx.dao.PredetermineDao" >
  <resultMap id="BaseResultMap" type="com.gx.po.PredeterminePo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Oct 16 19:18:30 CST 2016.
    -->
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="roomID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="predetermineTargetID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="passengerID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="payWayID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="predetermineStateID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="arriveTime" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp" />
      <arg column="deposit" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="predetermineDay" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="remind" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>

<!--   新增 -->
  <insert id="insertAll" useGeneratedKeys="true" keyProperty="id" parameterType="com.gx.po.StayRegisterPo" >
       INSERT INTO predetermine (roomID,predetermineTargetID,passengerID,payWayID,
     predetermineStateID,arriveTime,deposit,predetermineDay)
     values (#{roomID,jdbcType=INTEGER},
             #{predetermineTargetID,jdbcType=INTEGER},
             #{passengerID,jdbcType=INTEGER},
             #{payWayID,jdbcType=INTEGER},
             #{predetermineStateID,jdbcType=INTEGER},
             #{arriveTime,jdbcType=TIMESTAMP},
             #{deposit,jdbcType=DOUBLE},
             #{predetermineDay,jdbcType=VARCHAR})
  </insert>
  
  <!--   分页和模糊查询 -->
   <select id="pageFuzzyselect" resultType="com.gx.po.PredeterminePo">
     SELECT p.*,r.roomNumber,ar.attributeDetailsName AS roomGuestRoomLevelName,
	rt.teamName AS receiveTeamName,passenger.name AS passengerName,
	rt.principal AS receivePrincipal,b.attributeDetailsName AS receiveTargeTypeName,
	ap.attributeDetailsName AS predetermineStateName,
	rt.contactPhoneNUmber AS receiveContactPhoneNUmber,
	passenger.contactPhoneNumber AS passengerContactPhoneNumber
	FROM predetermine p LEFT OUTER JOIN room r ON p.roomID=r.id
	LEFT OUTER JOIN attributedetails ar ON r.guestRoomLevelID=ar.id
	LEFT OUTER JOIN receivetarget rt ON p.predetermineTargetID=rt.id
	LEFT OUTER JOIN passenger ON p.passengerID=passenger.id
	LEFT OUTER JOIN attributedetails ap ON p.predetermineStateID=ap.id
	LEFT OUTER JOIN attributedetails b ON rt.targetTypeID=b.id
	WHERE (rt.teamName LIKE CONCAT('%',#{receiveTeamName,jdbcType=VARCHAR},'%') 
	OR passenger.name LIKE CONCAT('%',#{passengerName,jdbcType=VARCHAR},'%')) 
	AND p.predetermineStateID=#{predetermineStateID,jdbcType=INTEGER} 
    limit #{start},#{pageSize}
  </select>
 

  <select id="countFuzzyselect" resultType="java.lang.Integer">
      SELECT count(*) FROM predetermine p LEFT OUTER JOIN room r ON p.roomID=r.id
	LEFT OUTER JOIN attributedetails ar ON r.guestRoomLevelID=ar.id
	LEFT OUTER JOIN receivetarget rt ON p.predetermineTargetID=rt.id
	LEFT OUTER JOIN passenger ON p.passengerID=passenger.id
	LEFT OUTER JOIN attributedetails ap ON p.predetermineStateID=ap.id
	LEFT OUTER JOIN attributedetails b ON rt.targetTypeID=b.id
	WHERE (rt.teamName LIKE CONCAT('%',#{receiveTeamName,jdbcType=VARCHAR},'%') 
	OR passenger.name LIKE CONCAT('%',#{passengerName,jdbcType=VARCHAR},'%')) 
	AND p.predetermineStateID=#{predetermineStateID,jdbcType=INTEGER} 
  </select>
   
   
<!--   id查询-->
   <select id="findById" resultType="com.gx.po.PredeterminePo">
    SELECT * FROM predetermine WHERE id=#{id,jdbcType=INTEGER} 
   </select>
     
<!--   根据 旅客id 来查询 -->
   <select id="findLvKeId" resultType="com.gx.po.PredeterminePo">
     SELECT p.*,r.roomNumber,ar.attributeDetailsName AS roomGuestRoomLevelName,
	rt.teamName AS receiveTeamName,passenger.name AS passengerName,
	rt.principal AS receivePrincipal,b.attributeDetailsName AS receiveTargeTypeName,
	ap.attributeDetailsName AS predetermineStateName,
	rt.contactPhoneNUmber AS receiveContactPhoneNUmber,
	passenger.contactPhoneNumber AS passengerContactPhoneNumber
	FROM predetermine p LEFT OUTER JOIN room r ON p.roomID=r.id
	LEFT OUTER JOIN attributedetails ar ON r.guestRoomLevelID=ar.id
	LEFT OUTER JOIN receivetarget rt ON p.predetermineTargetID=rt.id
	LEFT OUTER JOIN passenger ON p.passengerID=passenger.id
	LEFT OUTER JOIN attributedetails ap ON p.predetermineStateID=ap.id
	LEFT OUTER JOIN attributedetails b ON rt.targetTypeID=b.id 
    WHERE p.passengerID=#{passengerID,jdbcType=INTEGER} AND p.predetermineStateID=66 
  </select>
     
<!--   根据 团队id 来查询 -->
   <select id="findTeamId" resultType="com.gx.po.PredeterminePo">
    SELECT p.*,r.roomNumber,ar.attributeDetailsName AS roomGuestRoomLevelName,
	rt.teamName AS receiveTeamName,passenger.name AS passengerName,
	rt.principal AS receivePrincipal,b.attributeDetailsName AS receiveTargeTypeName,
	ap.attributeDetailsName AS predetermineStateName,
	rt.contactPhoneNUmber AS receiveContactPhoneNUmber,
	passenger.contactPhoneNumber AS passengerContactPhoneNumber
	FROM predetermine p LEFT OUTER JOIN room r ON p.roomID=r.id
	LEFT OUTER JOIN attributedetails ar ON r.guestRoomLevelID=ar.id
	LEFT OUTER JOIN receivetarget rt ON p.predetermineTargetID=rt.id
	LEFT OUTER JOIN passenger ON p.passengerID=passenger.id
	LEFT OUTER JOIN attributedetails ap ON p.predetermineStateID=ap.id
	LEFT OUTER JOIN attributedetails b ON rt.targetTypeID=b.id
    WHERE p.predetermineTargetID=#{predetermineTargetID,jdbcType=INTEGER} AND p.predetermineStateID=66 
  </select>
  
  
 <delete id="deleteById" parameterType="java.lang.Integer">
    DELETE FROM predetermine WHERE id = #{id,jdbcType=INTEGER}
  </delete>
  
  
  <!--   查询全部数据 无分页 -->
   <select id="selectAll" resultType="com.gx.po.PredeterminePo">
     SELECT p.*,r.roomNumber,ar.attributeDetailsName AS roomGuestRoomLevelName,
	rt.teamName AS receiveTeamName,passenger.name AS passengerName,
	rt.principal AS receivePrincipal,b.attributeDetailsName AS receiveTargeTypeName,
	ap.attributeDetailsName AS predetermineStateName,
	rt.contactPhoneNUmber AS receiveContactPhoneNUmber,
	passenger.contactPhoneNumber AS passengerContactPhoneNumber
	FROM predetermine p LEFT OUTER JOIN room r ON p.roomID=r.id
	LEFT OUTER JOIN attributedetails ar ON r.guestRoomLevelID=ar.id
	LEFT OUTER JOIN receivetarget rt ON p.predetermineTargetID=rt.id
	LEFT OUTER JOIN passenger ON p.passengerID=passenger.id
	LEFT OUTER JOIN attributedetails ap ON p.predetermineStateID=ap.id
	LEFT OUTER JOIN attributedetails b ON rt.targetTypeID=b.id
  </select>
  
  <!--   修改预订到时提示 -->
  <update id="updateRemind" parameterType="java.lang.Integer">
    UPDATE predetermine SET remind=1
    WHERE id = #{id,jdbcType=INTEGER}
  </update>
  
  <!--   修改预订状态 -->
  <update id="updatePredetermineStateID" parameterType="java.lang.Integer">
    UPDATE predetermine SET predetermineStateID=67
    WHERE id = #{id,jdbcType=INTEGER}
  </update>
          
</mapper>