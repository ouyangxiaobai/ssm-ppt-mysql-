<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gx.dao.RoomSetDao" >
  <resultMap id="BaseResultMap" type="com.gx.po.RoomSetPo" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Oct 16 19:18:30 CST 2016.
    -->
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="guestRoomLevelID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="roomStateID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="roomNumber" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="roomAmount" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="standardPriceDay" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="standardPrice" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="maxDuration" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="firstDuration" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="firstPrice" jdbcType="DOUBLE" javaType="java.lang.Double" />
    </constructor>
  </resultMap>

<!--   新增 -->
  <insert id="insertAll" useGeneratedKeys="true" keyProperty="booksID" parameterType="com.gx.po.RoomSetPo" >
     INSERT INTO room (guestRoomLevelID,roomStateID,roomNumber,roomAmount,standardPriceDay,
                       standardPrice,maxDuration,firstDuration,firstPrice)
     values (#{guestRoomLevelID,jdbcType=INTEGER},
             #{roomStateID,jdbcType=INTEGER},
             #{roomNumber,jdbcType=VARCHAR},
             #{roomAmount,jdbcType=VARCHAR},
             #{standardPriceDay,jdbcType=DOUBLE},
             #{standardPrice,jdbcType=DOUBLE},
             #{maxDuration,jdbcType=VARCHAR},
             #{firstDuration,jdbcType=VARCHAR},
             #{firstPrice,jdbcType=DOUBLE})
  </insert>
  
<!--   查询全部 -->
  <!-- <select id="selectAll" resultType="com.gx.po.RoomSetPo" >
    SELECT r.*,a.attributeDetailsName AS guestRoomLevelName,b.attributeDetailsName AS roomName 
    FROM room r INNER JOIN attributedetails a ON r.guestRoomLevelID=a.id 
    INNER JOIN attributedetails b ON r.roomStateID=b.id order by r.roomNumber ASC  
  </select> -->
  
<!--   修改要用的精确查询 -->
   <select id="selectById" resultType="com.gx.po.RoomSetPo" parameterType="java.lang.Integer">
      SELECT r.*, a.attributeDetailsName AS guestRoomLevelName,b.attributeDetailsName AS roomStateName
	FROM room r INNER JOIN attributedetails a ON r.guestRoomLevelID=a.id
	INNER JOIN attributedetails b ON r.roomStateID=b.id
	WHERE r.id=#{id,jdbcType=INTEGER}
   </select>
   
<!--    修改 -->
   <update id="updateById" parameterType="com.gx.po.RoomSetPo">
      UPDATE room SET guestRoomLevelID=#{guestRoomLevelID,jdbcType=INTEGER},
			             roomStateID=#{roomStateID,jdbcType=INTEGER},
			             roomNumber=#{roomNumber,jdbcType=VARCHAR},
			             roomAmount=#{roomAmount,jdbcType=VARCHAR},
			             standardPriceDay=#{standardPriceDay,jdbcType=DOUBLE},
			             standardPrice=#{standardPrice,jdbcType=DOUBLE},
			             maxDuration=#{maxDuration,jdbcType=VARCHAR},
			             firstDuration=#{firstDuration,jdbcType=VARCHAR},
			             firstPrice=#{firstPrice,jdbcType=DOUBLE}
                   WHERE id = #{id,jdbcType=INTEGER}
   </update>
   
   <delete id="deleteById" parameterType="java.lang.Integer">
    DELETE FROM room WHERE id = #{id,jdbcType=INTEGER}
  </delete>
  
<!--   模糊查询 -->
  <!--  <select id="fuzzyselectPo" resultType="com.gx.po.RoomSetPo">
    SELECT r.*,a.attributeDetailsName AS guestRoomLevelName,b.attributeDetailsName AS roomName 
    FROM room r INNER JOIN attributedetails a ON r.guestRoomLevelID=a.id 
    INNER JOIN attributedetails b ON r.roomStateID=b.id   
    WHERE roomNumber like CONCAT('%',#{roomNumber,jdbcType=VARCHAR},'%') order by r.roomNumber ASC
  </select> -->
  
  
  <!--   分页模糊查询 -->
   <select id="pageFuzzyselect" resultType="com.gx.po.RoomSetPo">
    SELECT r.*,a.attributeDetailsName AS guestRoomLevelName,b.attributeDetailsName AS roomName 
    FROM room r INNER JOIN attributedetails a ON r.guestRoomLevelID=a.id 
    INNER JOIN attributedetails b ON r.roomStateID=b.id   
    WHERE roomNumber like CONCAT('%',#{roomNumber,jdbcType=VARCHAR},'%') order by r.roomNumber ASC
    limit #{start},#{pageSize}
  </select>
  
  
  <select id="countFuzzyselect" resultType="java.lang.Integer">
     SELECT count(*) FROM room r INNER JOIN attributedetails a 
     ON r.guestRoomLevelID=a.id INNER JOIN attributedetails b ON r.roomStateID=b.id
     WHERE roomNumber like CONCAT('%',#{roomNumber,jdbcType=VARCHAR},'%') order by r.roomNumber ASC
  </select>
  
  <select id="selectAll" resultType="com.gx.po.RoomSetPo">
    SELECT r.*,a.attributeDetailsName AS guestRoomLevelName,b.attributeDetailsName AS roomName 
    FROM room r INNER JOIN attributedetails a ON r.guestRoomLevelID=a.id 
    INNER JOIN attributedetails b ON r.roomStateID=b.id   
  </select>
  
   <select id="selectByLeveId" resultType="com.gx.po.RoomSetPo" parameterType="java.lang.Integer">
    SELECT r.*,a.attributeDetailsName AS guestRoomLevelName,b.attributeDetailsName AS roomName 
    FROM room r INNER JOIN attributedetails a ON r.guestRoomLevelID=a.id 
    INNER JOIN attributedetails b ON r.roomStateID=b.id
    Where guestRoomLevelID=#{guestRoomLevelID,jdbcType=INTEGER}
  </select>
  
  
  <select id="selectYZ" resultType="java.lang.Integer">
    SELECT COUNT(*) FROM room Where roomNumber=#{roomNumber}
  </select>
  
  
  
  
  
  
  
  
  
  <!-- 非本派所用  安排房间时 需要改变当前房间的房态 -->
  <update id="updateByIdToRoomState" parameterType="com.gx.po.RoomSetPo">
      UPDATE room SET roomStateID=#{roomStateID,jdbcType=INTEGER}
                   WHERE id = #{id,jdbcType=INTEGER}
  </update>
  
   <select id="selectInformation" resultType="com.gx.po.RoomSetPo">
    SELECT r.*,a.attributeDetailsName AS guestRoomLevelName,b.attributeDetailsName AS roomName 
    FROM room r INNER JOIN attributedetails a ON r.guestRoomLevelID=a.id 
    INNER JOIN attributedetails b ON r.roomStateID=b.id   
    WHERE roomNumber like CONCAT('%',#{roomNumber,jdbcType=VARCHAR},'%') 
    and r.roomStateID=1 order by r.roomNumber ASC
  </select>
 <!--  非本派所用  客服等级来查询房间信息 -->
  <select id="levelSelectInformation" resultType="com.gx.po.RoomSetPo">
    SELECT r.*,a.attributeDetailsName AS guestRoomLevelName,b.attributeDetailsName AS roomName 
    FROM room r INNER JOIN attributedetails a ON r.guestRoomLevelID=a.id 
    INNER JOIN attributedetails b ON r.roomStateID=b.id   
    WHERE r.guestRoomLevelID = #{guestRoomLevelID,jdbcType=INTEGER}
  </select>
          
</mapper>